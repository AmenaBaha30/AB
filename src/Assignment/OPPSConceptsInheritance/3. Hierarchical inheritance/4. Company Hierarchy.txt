Project 4: Company Hierarchy

Objective: Practice creating a hierarchical inheritance structure with shared base class functionality.

Steps:

    Base Class Creation:
        Create a base class called Employee.
        Define private member variables: name (type String), employeeId (type String), and salary (type double).
        Provide a constructor to initialize these variables.
        Implement public methods getName(), getEmployeeId(), and getSalary() to access these variables.

    First Derived Class:
        Create a derived class called Developer that extends Employee.
        Add a private member variable: programmingLanguage (type String).
        Provide a constructor to initialize all variables, including those in the base class.
        Implement a public method getProgrammingLanguage() to access the programming language.

    Second Derived Class:
        Create a derived class called Designer that extends Employee.
        Add a private member variable: designTool (type String).
        Provide a constructor to initialize all variables, including those in the base class.
        Implement a public method getDesignTool() to access the design tool.

    Third Derived Class:
        Create a derived class called Tester that extends Employee.
        Add a private member variable: testingFramework (type String).
        Provide a constructor to initialize all variables, including those in the base class.
        Implement a public method getTestingFramework() to access the testing framework.

    Testing:
        In the main method, create objects of Developer, Designer, and Tester and display all their details, including those from the Employee class.